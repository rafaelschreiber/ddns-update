#!/usr/bin/env python3
import os
import json
import sys
import socket


def init():
    if os.getenv("USER") != "root":
        print("Sorry this tool is just for administrators you have to run it as root")
        exit(1)
    if os.system("which curl > /dev/null") != 0:
        print("curl isn't installed please install it and restart the program")
        exit(1)
    if not os.path.exists("/etc/ddns-update/config.json"):
        try:
            os.mkdir("/etc/ddns-update")
        except FileExistsError:
            pass
        os.system("curl https://raw.githubusercontent.com/rafaelschreiber/ddns-update/master/config.json "
                  "--output /etc/ddns-update/config.json > /dev/null 2>&1")
        print("It seems you are running this program for the first time")
        os.system(os.path.abspath(os.path.dirname(sys.argv[0])) + "/ddns-update")
        exit(0)
    return True


def getLastIP():
    try:
        with open('/etc/ddns-update/lastIP.txt') as lastIPFile:
            lastIP = lastIPFile.readline()
            try:
                socket.inet_aton(lastIP)
                lastIPFile.close()
                return lastIP[:-1]
            except socket.error:
                lastIPFile.close()
                return "0.0.0.0"
    except FileNotFoundError:
        return "0.0.0.0"


def checkConfig(confDict):
    if type(confDict["host"]) is not str:
        print("\nYou have no host specified. Please type in the host:")
        host= str(input(">>> "))
        confDict["host"] = host
    if type(confDict["domain"]) is not str:
        print("\nYou have no domain specified. Please type in your domain:")
        domain = str(input(">>> "))
        confDict["domain"] = domain
    if type(confDict["token"]) is not str:
        print("\nYou have no API Token specified. Please type in your API Token:")
        domain = str(input(">>> "))
        confDict["domain"] = domain
    return confDict


def getip():
    return os.popen('curl ipinfo.io/ip 2>/dev/null').readlines()[0][:-1]


def updateDNS(information):
    url = "https://dynamicdns.park-your-domain.com/update" + \
          "?host=" + information["host"] + \
          "&domain=" + information["domain"] + \
          "&password=" + information["token"] + \
          "&ip=" + information["ip"]
    command = "curl \"" + url + "\" > /dev/null 2>&1"
    if os.system(command) == 0:
        if information["host"] == "@":
            print("Successfully updated " + information["domain"] + " with IP address " + information["ip"])
        else:
            print("Successfully updated " + information["host"] + "." + information["domain"] + " with IP address " + information["ip"])
    else:
        print("Error. Maybe your credentials are wrong")
    os.system("echo " + information["ip"] + " > /etc/ddns-update/lastIP.txt")


def daemon(time):
    if os.system("which ddns-update-daemon > /dev/null") != 0:
        print("Please install the ddns-update-daemon")
        exit(1)
    os.system("ddns-update-daemon " + str(time))


def main():
    for arg in range(0, 3):
        try:
            sys.argv[arg] = sys.argv[arg]
        except IndexError:
            sys.argv.insert(arg, None)
    if sys.argv[1] == "-h" or sys.argv[1] == "--help":
        print("There is no help :(")
        exit(0)
    init()
    if getLastIP() == getip():
        print("IP-Address didn't changed. Nothing to do here")
        exit(0)
    if sys.argv[1] == "-d" or sys.argv[1] == "--daemon":
        if sys.argv[2] is None or int(sys.argv[2]) < 30:
            print("Please type in the wished update interval (in seconds)")
            while True:
                try:
                    time = int(input(">>> "))
                    if time < 30:
                        print("Please type in a number greater or equal than 30\n")
                    else:
                        sys.argv[2] = time
                        break
                except ValueError:
                    print("Please type in a decimal number\n")
        daemon(sys.argv[2])
        exit(0)

    configData = None
    with open('/etc/ddns-update/config.json') as configFile:
        try:
            configData = json.load(configFile)
        except json.decoder.JSONDecodeError:
            print("Syntax Error in config file")
            exit(1)
        configFile.close()
    for configDict in configData["entries"]:
        config = checkConfig(configDict)
        config["ip"] = getip()
        updateDNS(config)


if __name__ == '__main__':
    try:
        main()
        exit(0)
    except KeyboardInterrupt:
        exit(1)
    except EOFError:
        exit(1)
    except:
        print("Crashed :(")
        exit(1)
